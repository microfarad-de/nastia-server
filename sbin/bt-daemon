#!/bin/bash
#
# Bluetooth serial communication daemon
#
# This source file is part of the follwoing repository:
# http://www.github.com/microfarad-de/nastia-server
#
# Please visit:
#   http://www.microfarad.de
#   http://www.github.com/microfarad-de
#
# Copyright (C) 2023 Karim Hraibi (khraibi@gmail.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

set -m # Enable Job Control

# Path to the current directory where this script is located
DIR=$(dirname $(readlink -f "$BASH_SOURCE"))

# Include common configuration file
source "$DIR/common.sh"

# Configuration parameters
PREFIX="bt-daemon"                            # Log prefix
LOG="$CFG_LOG_DIR/$PREFIX.log"                # Main log file
DEAMON_SCRIPT="$DIR/../lib/serial-daemon.py"  # Script that handles a BT serial port


# Print info message to log file
function infoLog {
  _infoLog "$1" "$PREFIX" "$LOG" "ecd"
}

# Print warning message to log file
function warningLog {
  _warningLog "$1" "$PREFIX" "$LOG" "ecd"
}

# Print error message to log file
function errorLog {
  _errorLog "$1" "$PREFIX" "$LOG" "ecd"
}



# Start a serial daemon
function start {
  local device="$1"
  local address="$2"
  local justBind="$3"
  local rv=0
  local status

  if [[ ! -e "/dev/$device" ]]; then
    infoLog "Binding /dev/$device to $address"
    rfcomm bind "/dev/$device" "$address"
    rv=$?
    sleep 30
  fi

  if [[ "$justBind" == "bind" ]]; then
    return
  fi

  if [[ rv -eq 0 ]]; then
    infoLog "Connecting Bluetooth device (device=/dev/$device address=$address)"
    $DEAMON_SCRIPT "$device" "$PREFIX" &
  else
    errorLog "Failed to bind Bluetooth device (device=$device address=$address)"
  fi
}


# Start a serial daemon for a BLE device
function bleStart {
  local device="$1"
  local address="$2"
  local rv=0
  local status

  if [[ ! -e "/dev/$device" ]]; then
    infoLog "Binding BLE /dev/$device to $address"
    python3 -m ble_serial -d "$address" -p "/dev/$device" &
    sleep 5
  fi

  if [[ "$justBind" == "bind" ]]; then
    return
  fi

  if [[ -e "/dev/$device" ]]; then
    infoLog "Connecting BLE device (device=/dev/$device address=$address)"
    $DEAMON_SCRIPT "$device" "$PREFIX" &
  else
    errorLog "Failed to bind BLE device (device=$device address=$address)"
  fi
}





#################
####  START  ####
#################


# Loop over configurations
for i in "${!CFG_BLUETOOTH[@]}"; do
  config=(${CFG_BLUETOOTH[i]})
  device="${config[0]}"
  address="${config[1]}"
  mode="${config[2]}"
  justBind="$1"
  if [[ "$mode" == "ble" ]]; then
    bleStart "$device" "$address" "$justBind"
  else
    start "$device" "$address" "$justBind"
  fi
done

if [[ "$justBind" == "bind" ]]; then
  exit 0
fi

# Loop forever until process stopped
while true; do
   sleep 1
done


