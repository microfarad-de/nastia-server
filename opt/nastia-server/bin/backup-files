#!/bin/bash
#
# Backup files and documents
#
# This source file is part of the follwoing repository:
# http://www.github.com/microfarad-de/nastia-server
#
# Please visit:
#   http://www.microfarad.de
#   http://www.github.com/microfarad-de
#
# Copyright (C) 2019 Karim Hraibi (khraibi@gmail.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Path to the current directory where this script is located
DIR=$(dirname $(readlink -f "$BASH_SOURCE"))

# Include common configuration file
source "$DIR/common.sh"

LOG_PREFIX="backup-files"

LOG="$CFG_LOG_DIR/$LOG_PREFIX.log"

# Redirect stdout ( > ) into a named pipe ( >() ) running "tee"
exec > >(tee -i -a "$LOG")
exec 2>&1



# Info log messages
function infoLog {
  _infoLog "$1" "$LOG_PREFIX" "" "c"
}

# Warning log messages
function warningLog {
  _warningLog "$1" "$LOG_PREFIX" "" "ec"
}

# Error log messages
function errorLog {
  _errorLog "$1" "$LOG_PREFIX" "" "ec"
}




#################
####  START  ####
#################

result=0

# Convert array to string
for i in "${!CFG_BACKUP_FILES_SOURCE[@]}"; do
  SOURCE="${CFG_BACKUP_FILES_SOURCE[$i]}/"
  EXCLUDE=(${CFG_BACKUP_FILES_EXCLUDE[$i]})
  DESTINATION="${CFG_BACKUP_FILES_DESTINATION[$i]}/"

  for x in "${EXCLUDE[@]}"; do
      options="$options --exclude=$x"
  done

  if [[ $SOURCE == "" ]] || [[ $DESTINATION == "" ]]; then
    continue
  fi

  echo "############################"
  date
  echo "Source:      $SOURCE"
  echo "Exclude:     ${EXCLUDE[@]}"
  echo "Destination: $DESTINATION"
  echo "############################"
  echo " "
  rsync -avmu --delete $options "$SOURCE" "$DESTINATION"
  rv=$?
  if [[ $rv -eq 0 ]]; then
    infoLog "backup: $SOURCE --> $DESTINATION"
  else
    echo " "
    errorLog "rsync returned $rv"
    result=$rv
  fi
  echo " "
  echo " "
done

exit $result

